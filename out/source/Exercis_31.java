/* autogenerated by Processing revision 1276 on 2021-10-10 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Exercis_31 extends PApplet {

float rotSecs = 0;
float rotMins = 0;
float rotHours = 0;

int s = 0;
int m;
int h;
int d;
int mon;
int yr;

int lastSec = 0;
int lastMin = 0;
int lastHour = 0;

int faceSize = 500;
PFont font;

 public void setup() {
    /* size commented out by preprocessor */;
    strokeWeight(2);
    font = loadFont("OCRAExtended-48.vlw");
}

 public void draw() {
    setTime();
    setFace();
    dayTime();
    rotAngle();
    rotTime();
}

 public void setTime() {
    s = second();
    m = minute();
    h = hour();
    d = day();
    mon = month();
    yr = year();
}

 public void setFace() {
    fill(0xFF5A3535);
    stroke(55);
    ellipse(width / 2, height / 2, faceSize, faceSize);
    fill(100);
    ellipse(width / 2, height / 2, faceSize - 15, faceSize - 15);
    
    stroke(0, 127, 255, 44);
    for (int i = 0; i < 12; i++) {
        float rot = ((float) i / 12) * TWO_PI;
        pushMatrix();
        translate(width / 2, height / 2);
        rotate(rot);
        line(0, faceSize / 5, 0, faceSize / 2 - 10);
        popMatrix();
    }
    pushMatrix();
    translate(width / 2,height / 2);
    fill(0xFF5F4949,120);
    square(20, - 80,80);
    square(120, - 80,80);
    popMatrix();
}

 public void rotAngle() {
    if (s != lastSec) {
        rotSecs = ((float) s / 60) * TWO_PI;
        lastSec = s;
    }
    
    if (m != lastMin) {
        rotMins = ((float) m / 60) * TWO_PI; 
        lastMin = m;
    }
    
    if (h != lastHour) {
        rotHours = ((float) h / 12) * TWO_PI;  
        lastHour = h;
    }
}

 public void rotTime() {
    pushMatrix();
    translate(width / 2, height / 2);
    rotate(rotSecs);
    fill(55);
    stroke(55);
    line(0, 0, 0, -220);
    ellipse(0, -220, 10,10);
    popMatrix();
    
    pushMatrix();
    translate(width / 2,height / 2);
    rotate(rotMins);
    fill(55);
    stroke(55);
    line(0,0,0, - 150);
    ellipse(0, - 150,10,10);
    popMatrix();
    
    pushMatrix();
    translate(width / 2,height / 2);
    rotate(rotHours);
    fill(55);
    stroke(55);
    line(0,0,0, - 80);
    ellipse(0, - 80,10,10);
    popMatrix();
    
    pushMatrix();
    translate(width / 2,height / 2);
    PImage round;
    round = loadImage("r.png");
    imageMode(CENTER);
    rotate(cos(radians(map(frameCount, 0, 60, -90, 270))));
    image(round, 0,0,500,500);
    popMatrix();
    
    //rotSecs = ((float) s / 60) * TWO_PI * cos(radians(map(frameCount, 0, 60, -90, 270))));
    
}


 public void dayTime() {
    pushMatrix();
    translate(width / 2,height / 2);
    fill(220);
    textFont(font,70);
    textAlign(CENTER, CENTER);
    text(month(),60, - 40);
    text(day(),160, - 40);
    popMatrix();
}


  public void settings() { size(800, 600, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Exercis_31" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
